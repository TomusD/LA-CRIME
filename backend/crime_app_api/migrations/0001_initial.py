# Generated by Django 5.1.2 on 2024-12-01 12:26

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ModusOperandi',
            fields=[
                ('mo_code_id', models.AutoField(primary_key=True, serialize=False)),
                ('mocodes', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Premises',
            fields=[
                ('premis_cd', models.IntegerField(primary_key=True, serialize=False)),
                ('premis_desc', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('status_cd', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('status_desc', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('area_id', models.IntegerField(primary_key=True, serialize=False)),
                ('area_name', models.CharField(max_length=100)),
            ],
            options={
                'indexes': [models.Index(fields=['area_name'], name='crime_app_a_area_na_56ebff_idx')],
            },
        ),
        migrations.CreateModel(
            name='CrimeCode',
            fields=[
                ('crm_cd', models.IntegerField(primary_key=True, serialize=False)),
                ('crm_cd_desc', models.CharField(max_length=100)),
            ],
            options={
                'indexes': [models.Index(fields=['crm_cd_desc'], name='crime_app_a_crm_cd__be1b85_idx')],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('location_id', models.AutoField(primary_key=True, serialize=False)),
                ('street_address', models.CharField(max_length=200)),
                ('cross_street', models.CharField(blank=True, max_length=200, null=True)),
                ('lat', models.DecimalField(decimal_places=8, max_digits=10, null=True)),
                ('lon', models.DecimalField(decimal_places=8, max_digits=11, null=True)),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crime_app_api.area')),
            ],
        ),
        migrations.CreateModel(
            name='ReportDistrict',
            fields=[
                ('report_dist_id', models.AutoField(primary_key=True, serialize=False)),
                ('rpt_dist_no', models.IntegerField()),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crime_app_api.area')),
            ],
        ),
        migrations.CreateModel(
            name='Victim',
            fields=[
                ('victim_id', models.AutoField(primary_key=True, serialize=False)),
                ('vict_age', models.IntegerField(null=True)),
                ('vict_sex', models.CharField(max_length=5, null=True)),
                ('vict_descent', models.CharField(max_length=5, null=True)),
            ],
            options={
                'indexes': [models.Index(fields=['vict_age'], name='crime_app_a_vict_ag_915ab5_idx')],
            },
        ),
        migrations.CreateModel(
            name='Weapon',
            fields=[
                ('weapon_used_cd', models.IntegerField(default=0, primary_key=True, serialize=False)),
                ('weapon_desc', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'indexes': [models.Index(fields=['weapon_desc'], name='crime_app_a_weapon__595fc0_idx')],
            },
        ),
        migrations.CreateModel(
            name='CrimeReport',
            fields=[
                ('dr_no_id', models.IntegerField(primary_key=True, serialize=False)),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crime_app_api.area')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crime_app_api.location')),
                ('mo_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crime_app_api.modusoperandi')),
                ('premise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crime_app_api.premises')),
                ('report_dist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crime_app_api.reportdistrict')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crime_app_api.status')),
                ('victim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crime_app_api.victim')),
                ('weapon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crime_app_api.weapon')),
            ],
        ),
        migrations.CreateModel(
            name='CrimeDate',
            fields=[
                ('dr_no', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='crime_app_api.crimereport')),
                ('date_rptd', models.DateField()),
                ('date_occ', models.DateField()),
                ('time_occ', models.TimeField()),
            ],
            options={
                'indexes': [models.Index(fields=['date_rptd'], name='crime_app_a_date_rp_a40fcd_idx'), models.Index(fields=['date_occ'], name='crime_app_a_date_oc_c8af75_idx'), models.Index(fields=['time_occ'], name='crime_app_a_time_oc_08e9db_idx')],
            },
        ),
        migrations.CreateModel(
            name='CrimeReportCode',
            fields=[
                ('dr_no', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='crime_app_api.crimereport')),
                ('crm_cd_1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='primary_codes', to='crime_app_api.crimecode')),
                ('crm_cd_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='secondary_codes', to='crime_app_api.crimecode')),
                ('crm_cd_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tertiary_codes', to='crime_app_api.crimecode')),
                ('crm_cd_4', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='quaternary_codes', to='crime_app_api.crimecode')),
            ],
        ),
        migrations.AddIndex(
            model_name='location',
            index=models.Index(fields=['lat', 'lon'], name='crime_app_a_lat_3f991a_idx'),
        ),
        migrations.AddIndex(
            model_name='reportdistrict',
            index=models.Index(fields=['rpt_dist_no'], name='crime_app_a_rpt_dis_b0e42c_idx'),
        ),
    ]
